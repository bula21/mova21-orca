.h1.pb-0.d-flex.justify-content-between
  = "#{@activity.id} -  #{@activity.label}"
  span.badge[class="badge-#{@activity.activity_category.css_code}" style='align-self: baseline']
    = @activity.activity_category&.label

.mb-3= link_to t('buttons.back'), activity_path(@activity)

= react_component("CalendarManager", { activityId: @activity.id,
        availableLanguages: available_languages_for_frontend(@activity),
        defaultAmountParticipants: @activity.participants_count_transport,
        spots: SpotBlueprint.render_as_hash(@spots, view: :with_fields), editable: true })

.table-responsive.mt-4
  table.table
    thead
      tr
        th = ActivityExecution.human_attribute_name(:id)
        th = ActivityExecution.human_attribute_name(:starts_at)
        th = ActivityExecution.human_attribute_name(:ends_at)
        th = ActivityExecution.human_attribute_name(:field)
        th = ActivityExecution.human_attribute_name(:amount_participants)
        th
    tbody
      - @activity_executions.each do |activity_execution|
        tr
          td 
            = activity_execution.id
          td
            = l(activity_execution.starts_at, format: :short)
          td 
            = l(activity_execution.ends_at, format: :short)
          td 
            = activity_execution.field
          td 
            = activity_execution.amount_participants
          td.p-1
            = link_to(UnitActivityExecution.model_name.human(count: 2), unit_activity_executions_path(activity_execution_id: activity_execution.id), class: 'btn btn-primary') if can?(:read, UnitActivityExecution)
            / = link_to(t('buttons.edit'), edit_unit_activity_execution_path(activity_execution), class: 'btn btn-primary') if can?(:edit, unit_activity_execution)
            / = link_to t('buttons.destroy'), unit_activity_execution_path(activity_execution), data: { confirm: t('buttons.confirm_delete'), params: { unit_id: params[:unit_id], activity_execution_id: params[:activity_execution_id]} }, method: :delete, class: 'btn btn-secondary' if can?(:delete, unit_activity_execution)

.row.mt-4
  .col-md-6
    .card
      .card-body
        h4 = t('activity.show.excel_import.title')
        p
          = t('activity.show.excel_import.description')
          =< link_to t('activity.show.excel_import.template_download'), '/activity_execution_upload_template.xlsx'

        - if @import_errors.present?
          ul.alert.alert-danger
            - @import_errors.each do |error|
              li = error

        = simple_form_for :import, url: import_activity_activity_executions_path(@activity), method: :post do |f|
          = f.input :file, as: :file
          = f.submit t('buttons.upload'), class: 'btn btn-secondary'

  .col-md-6
    .card.alert.alert-danger
      .card-body
        h4 = t('delete_activity_executions.index.title')
        p = t('activity.show.executions_delete.description')
        = link_to t('activity.show.executions_delete.link'), activity_delete_activity_executions_path(@activity),
                class: 'btn btn-danger'


hr.mt-4
=> link_to t('buttons.back'), activities_path, class: 'btn btn-secondary'
