= simple_form_for(@activity) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .card
    .card-body
      .row
        .col-6
          = f.association :activity_category, collection: ActivityCategory.roots,
                  as: :grouped_select,
                  group_method: :children, group_label_method: :label,
                  label_method: :full_label

        .col-6
          = f.input :block_type, collection: Activity.block_types.symbolize_keys.keys
  .card.mt-3
    .card-body
      ul.nav.nav-tabs role="tablist"
        - I18n.available_locales.each do |locale|
          - current_locale = locale == I18n.locale
          li.nav-item
            = link_to locale.upcase, "#name-#{locale}-tab",
                    class: "nav-link #{'active' if current_locale}",
                    aria: { controls: "name-#{locale}-tab", selected: current_locale },
                    data: { toggle: 'tab' }, role: 'tab'
      .tab-content
        - I18n.available_locales.each do |locale|
          - current_locale = locale == I18n.locale
          .tab-pane[id="name-#{locale}-tab" class="#{'show active' if current_locale}"
            aria-labelledby="name-#{locale}-tab" role='tabpanel']
            = f.input "label_#{locale.to_s}", label: "#{t('activerecord.attributes.activity.label')} #{locale.upcase}"
            = f.input "description_#{locale.to_s}", as: :text, input_html: { :rows => 10 },
                    label: "#{t('activerecord.attributes.activity.description')} #{locale.upcase}"
  .card.mt-3
    .card-body
      .form-inputs
      .row
        .col-6
          = f.association :goals, as: :check_boxes
          = f.association :tags, as: :check_boxes
        .col-6
          = f.association :stufen, as: :check_boxes
          = f.association :stufe_recommended, as: :check_boxes
  .card.mt-3
    .card-body
      .row
        .col-6
          = f.input :duration_activity
          = f.input :participants_count_activity
          / = f.input :location
          / = f.association :transport_location
        .col-6
          / = f.input :duration_journey
          = f.input :participants_count_transport
  .card.mt-3
    .card-body
      .form-inputs
        .row
          .col-6
            = f.label :languages
            - @activity.languages.keys.each do |language|
              = f.input language, as: :boolean
          .col-6
            = f.input :simo, collection: Activity.simos.symbolize_keys.keys
            = f.input :min_participants


  .card.mt-3
    .card-body
      .form-group
        .alert.alert-warning = t('activity.edit.warning')
        .h4.label{for='activity_activity_documents'} = t('activerecord.attributes.activity.activity_documents')
        .row
          .col-6
            = f.file_field :activity_documents, multiple: true
            ul.list-group.mt-3
              - @activity.activity_documents.each do |document|
                li.list-group-item
                  = document.filename
                  = link_to t('buttons.destroy'), activity_path(attachment_id: document.id),
                          method: :delete,
                          class: 'btn btn-sm btn-secondary float-right',
                          data: { confirm: t('simple_form.confirm_unsaved') }

          .col-6
            label{for='picture'} = t('activerecord.attributes.activity.picture')
            br
            = f.file_field :picture
            - unless @activity.picture.blank?
              = image_tag(@activity.picture, height: "100")
              = link_to t('buttons.destroy'), activity_path(picture_id: @activity.picture.id),
                      method: :delete,
                      class: 'btn btn-sm btn-secondary float-right',
                      data: { confirm: t('simple_form.confirm_unsaved') }


  .actions.mt-3
    = f.submit t('buttons.save'), class: 'btn btn-primary'
